//\n//  UsageStatsCard.swift\n//  Mervyn Talks\n//\n//  Clean usage statistics card for the redesigned interface\n//\n\nimport SwiftUI\n\nstruct UsageStatsCard: View {\n    @StateObject private var usageService = UsageTrackingService.shared\n    @State private var showingDetails = false\n    \n    var body: some View {\n        HStack(spacing: DesignConstants.Layout.elementSpacing) {\n            // Usage Information\n            if usageService.isUnlimitedBeta {\n                betaBadgeView\n            } else {\n                usageInfoView\n            }\n            \n            Spacer()\n            \n            // Action Buttons\n            actionButtonsView\n        }\n        .padding(DesignConstants.Layout.cardSpacing)\n        .modernCardBackground()\n        .sheet(isPresented: $showingDetails) {\n            UsageDetailView()\n        }\n    }\n    \n    // MARK: - Views\n    \n    private var betaBadgeView: some View {\n        HStack(spacing: DesignConstants.Layout.smallSpacing) {\n            Text(\"BETA\")\n                .font(.system(size: 12, weight: .bold))\n                .foregroundColor(.white)\n                .padding(.horizontal, 8)\n                .padding(.vertical, 4)\n                .background(\n                    Capsule()\n                        .fill(DesignConstants.Colors.primary)\n                )\n            \n            VStack(alignment: .leading, spacing: 2) {\n                Text(\"Unlimited minutes\")\n                    .font(.system(size: 14, weight: .medium))\n                    .foregroundColor(DesignConstants.Colors.primaryText)\n                \n                Text(\"during beta testing\")\n                    .font(.system(size: 12))\n                    .foregroundColor(DesignConstants.Colors.secondaryText)\n            }\n        }\n    }\n    \n    private var usageInfoView: some View {\n        VStack(alignment: .leading, spacing: DesignConstants.Layout.smallSpacing) {\n            Text(\"\\(String(format: \"%.1f\", usageService.minutesRemainingForDisplay)) min remaining\")\n                .font(.system(size: 14, weight: .medium))\n                .foregroundColor(DesignConstants.Colors.primaryText)\n            \n            // Usage Progress Bar\n            GeometryReader { geometry in\n                ZStack(alignment: .leading) {\n                    // Background\n                    RoundedRectangle(cornerRadius: 2)\n                        .fill(DesignConstants.Colors.secondaryText.opacity(0.2))\n                        .frame(height: 4)\n                    \n                    // Progress\n                    RoundedRectangle(cornerRadius: 2)\n                        .fill(usageWarningColor)\n                        .frame(\n                            width: geometry.size.width * usageService.minutesUsedPercentage(),\n                            height: 4\n                        )\n                        .animation(DesignConstants.Animations.gentle, value: usageService.minutesUsedPercentage())\n                }\n            }\n            .frame(height: 4)\n        }\n    }\n    \n    private var actionButtonsView: some View {\n        HStack(spacing: DesignConstants.Layout.smallSpacing) {\n            // Add Minutes Button (if low)\n            if !usageService.isUnlimitedBeta && usageService.shouldShowLowMinutesWarning() {\n                Button(\"Add Minutes\") {\n                    let impactFeedback = UIImpactFeedbackGenerator(style: .light)\n                    impactFeedback.impactOccurred()\n                    showingDetails = true\n                }\n                .font(.system(size: 12, weight: .medium))\n                .foregroundColor(.white)\n                .padding(.horizontal, 12)\n                .padding(.vertical, 6)\n                .background(\n                    Capsule()\n                        .fill(DesignConstants.Colors.primary)\n                )\n            }\n            \n            // Stats Button\n            Button(action: {\n                let impactFeedback = UIImpactFeedbackGenerator(style: .light)\n                impactFeedback.impactOccurred()\n                showingDetails = true\n            }) {\n                Image(systemName: \"chart.bar\")\n                    .font(.system(size: 18))\n                    .foregroundColor(DesignConstants.Colors.primary)\n            }\n            .accessibilityLabel(\"View usage statistics\")\n        }\n    }\n    \n    // MARK: - Computed Properties\n    \n    private var usageWarningColor: Color {\n        if usageService.minutesRemainingForDisplay > 10 {\n            return DesignConstants.Colors.success\n        } else if usageService.minutesRemainingForDisplay > 5 {\n            return DesignConstants.Colors.processing\n        } else {\n            return DesignConstants.Colors.recording\n        }\n    }\n}\n\n// MARK: - Usage Detail View\n\nstruct UsageDetailView: View {\n    @Environment(\\.dismiss) var dismiss\n    @StateObject private var usageService = UsageTrackingService.shared\n    \n    var body: some View {\n        NavigationView {\n            ScrollView {\n                VStack(spacing: DesignConstants.Layout.contentSpacing) {\n                    // Usage Summary\n                    VStack(spacing: DesignConstants.Layout.elementSpacing) {\n                        if usageService.isUnlimitedBeta {\n                            Text(\"BETA Testing\")\n                                .font(.system(size: 24, weight: .bold))\n                                .foregroundColor(DesignConstants.Colors.primary)\n                            \n                            Text(\"Enjoy unlimited translation minutes during the beta period!\")\n                                .font(.system(size: 16))\n                                .foregroundColor(DesignConstants.Colors.secondaryText)\n                                .multilineTextAlignment(.center)\n                        } else {\n                            Text(\"\\(String(format: \"%.1f\", usageService.minutesRemainingForDisplay))\")\n                                .font(.system(size: 48, weight: .bold))\n                                .foregroundColor(DesignConstants.Colors.primary)\n                            \n                            Text(\"minutes remaining\")\n                                .font(.system(size: 16))\n                                .foregroundColor(DesignConstants.Colors.secondaryText)\n                        }\n                    }\n                    .padding()\n                    .modernCardBackground()\n                    \n                    // Additional stats can be added here\n                    \n                    Spacer()\n                }\n                .professionalPadding()\n            }\n            .navigationTitle(\"Usage Statistics\")\n            .navigationBarTitleDisplayMode(.inline)\n            .toolbar {\n                ToolbarItem(placement: .navigationBarTrailing) {\n                    Button(\"Done\") {\n                        dismiss()\n                    }\n                }\n            }\n        }\n    }\n}\n\n// MARK: - Preview\n\n#if DEBUG\nstruct UsageStatsCard_Previews: PreviewProvider {\n    static var previews: some View {\n        VStack(spacing: 20) {\n            UsageStatsCard()\n        }\n        .padding()\n        .previewLayout(.sizeThatFits)\n    }\n}\n#endif